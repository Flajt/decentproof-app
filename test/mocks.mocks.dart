// Mocks generated by Mockito 5.4.4 from annotations
// in decentproof/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:isolate' as _i7;
import 'dart:typed_data' as _i30;

import 'package:basic_utils/basic_utils.dart' as _i6;
import 'package:decentproof/features/hashing/interfaces/IMediaPickerService.dart'
    as _i4;
import 'package:decentproof/features/hashing/logic/backend/HashSubmissionService.dart'
    as _i15;
import 'package:decentproof/features/hashing/logic/backend/ShowInExplorer.dart'
    as _i32;
import 'package:decentproof/features/hashing/logic/hasher/AudioHashingService.dart'
    as _i23;
import 'package:decentproof/features/hashing/logic/hasher/ImageHashingService.dart'
    as _i24;
import 'package:decentproof/features/hashing/logic/hasher/VideoHashingService.dart'
    as _i25;
import 'package:decentproof/features/hashing/logic/ImagePickerWrapper.dart'
    as _i31;
import 'package:decentproof/features/hashing/logic/ImageSavingService.dart'
    as _i20;
import 'package:decentproof/features/hashing/logic/VideoSavingService.dart'
    as _i19;
import 'package:decentproof/features/hashing/logic/water_mark/ImageWaterMarkService.dart'
    as _i21;
import 'package:decentproof/features/hashing/logic/water_mark/VideoWaterMarkService.dart'
    as _i22;
import 'package:decentproof/features/metadata/logic/LocationServiceWrapper.dart'
    as _i13;
import 'package:decentproof/features/metadata/logic/MetaDataPermissionService.dart'
    as _i14;
import 'package:decentproof/features/metadata/logic/metaDataServices/AudioMetaDataService.dart'
    as _i17;
import 'package:decentproof/features/metadata/logic/metaDataServices/ImageMetaDataService.dart'
    as _i16;
import 'package:decentproof/features/metadata/logic/metaDataServices/VideoMetaDataService.dart'
    as _i18;
import 'package:decentproof/features/metadata/models/LocationModel.dart' as _i2;
import 'package:decentproof/features/metadata/models/MetaDataModel.dart' as _i3;
import 'package:decentproof/features/verification/logic/FilePickerWrapper.dart'
    as _i27;
import 'package:decentproof/features/verification/logic/SignatureVerificationService.dart'
    as _i33;
import 'package:decentproof/features/verification/logic/VerificationService.dart'
    as _i26;
import 'package:decentproof/features/verification/models/FileDataMode.dart'
    as _i28;
import 'package:decentproof/features/verification/models/VerificationStatusModel.dart'
    as _i5;
import 'package:decentproof/shared/foregroundService/ForegroundServiceWrapper.dart'
    as _i34;
import 'package:decentproof/shared/HashLogic.dart' as _i29;
import 'package:decentproof/shared/Integrety/ApiKeyRequestService.dart' as _i11;
import 'package:decentproof/shared/Integrety/AppCheck.dart' as _i8;
import 'package:decentproof/shared/Integrety/SecureStorageWrapper.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLocationModel_0 extends _i1.SmartFake implements _i2.LocationModel {
  _FakeLocationModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMetaDataModel_1 extends _i1.SmartFake implements _i3.MetaDataModel {
  _FakeMetaDataModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIMediaPickerService_2 extends _i1.SmartFake
    implements _i4.IMediaPickerService {
  _FakeIMediaPickerService_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVerificationStatusModel_3 extends _i1.SmartFake
    implements _i5.VerificationStatusModel {
  _FakeVerificationStatusModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeECPublicKey_4 extends _i1.SmartFake implements _i6.ECPublicKey {
  _FakeECPublicKey_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeECSignature_5 extends _i1.SmartFake implements _i6.ECSignature {
  _FakeECSignature_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReceivePort_6 extends _i1.SmartFake implements _i7.ReceivePort {
  _FakeReceivePort_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppCheck].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppCheck extends _i1.Mock implements _i8.AppCheck {
  @override
  _i9.Future<String> getIntegrityToken() => (super.noSuchMethod(
        Invocation.method(
          #getIntegrityToken,
          [],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getIntegrityToken,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getIntegrityToken,
            [],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [ApiKeyRequestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiKeyRequestService extends _i1.Mock
    implements _i11.ApiKeyRequestService {
  @override
  String get checkKeyURL => (super.noSuchMethod(
        Invocation.getter(#checkKeyURL),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#checkKeyURL),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#checkKeyURL),
        ),
      ) as String);

  @override
  String get getKeyURL => (super.noSuchMethod(
        Invocation.getter(#getKeyURL),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#getKeyURL),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#getKeyURL),
        ),
      ) as String);

  @override
  _i9.Future<bool> checkForNewApiKey(String? apiKey) => (super.noSuchMethod(
        Invocation.method(
          #checkForNewApiKey,
          [apiKey],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<String> getNewNewKey(String? token) => (super.noSuchMethod(
        Invocation.method(
          #getNewNewKey,
          [token],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getNewNewKey,
            [token],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #getNewNewKey,
            [token],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [SecureStorageWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageWrapper extends _i1.Mock
    implements _i12.SecureStorageWrapper {
  @override
  _i9.Future<void> saveApiKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #saveApiKey,
          [key],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> retriveApiKey() => (super.noSuchMethod(
        Invocation.method(
          #retriveApiKey,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
        returnValueForMissingStub: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<String?> retriveEmail() => (super.noSuchMethod(
        Invocation.method(
          #retriveEmail,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
        returnValueForMissingStub: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<void> saveEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #saveEmail,
          [email],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> retriveSecret() => (super.noSuchMethod(
        Invocation.method(
          #retriveSecret,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
        returnValueForMissingStub: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<void> saveSecret(String? secret) => (super.noSuchMethod(
        Invocation.method(
          #saveSecret,
          [secret],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [LocationServiceWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationServiceWrapper extends _i1.Mock
    implements _i13.LocationServiceWrapper {
  @override
  _i9.Future<bool> getPermission() => (super.noSuchMethod(
        Invocation.method(
          #getPermission,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<bool> hasPermission() => (super.noSuchMethod(
        Invocation.method(
          #hasPermission,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i2.LocationModel> requestLocation() => (super.noSuchMethod(
        Invocation.method(
          #requestLocation,
          [],
        ),
        returnValue: _i9.Future<_i2.LocationModel>.value(_FakeLocationModel_0(
          this,
          Invocation.method(
            #requestLocation,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.LocationModel>.value(_FakeLocationModel_0(
          this,
          Invocation.method(
            #requestLocation,
            [],
          ),
        )),
      ) as _i9.Future<_i2.LocationModel>);

  @override
  _i9.Future<bool> serviceEnabled() => (super.noSuchMethod(
        Invocation.method(
          #serviceEnabled,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [MetaDataPermissionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMetaDataPermissionService extends _i1.Mock
    implements _i14.MetaDataPermissionService {
  @override
  _i9.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> allowLocationEmbedding(bool? allow) => (super.noSuchMethod(
        Invocation.method(
          #allowLocationEmbedding,
          [allow],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> allowSecretEmbedding(bool? allow) => (super.noSuchMethod(
        Invocation.method(
          #allowSecretEmbedding,
          [allow],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  bool shouldEmbedLocation() => (super.noSuchMethod(
        Invocation.method(
          #shouldEmbedLocation,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool shouldEmbedSecret() => (super.noSuchMethod(
        Invocation.method(
          #shouldEmbedSecret,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [HashSubmissionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHashSubmissionService extends _i1.Mock
    implements _i15.HashSubmissionService {
  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
      ) as String);

  @override
  _i9.Future<void> submitHash(
    String? hash,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitHash,
          [
            hash,
            email,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [ImageMetaDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageMetaDataService extends _i1.Mock
    implements _i16.ImageMetaDataService {
  @override
  _i9.Future<String> addLocation(
    _i2.LocationModel? locationModel,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLocation,
          [
            locationModel,
            filePath,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocation,
            [
              locationModel,
              filePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocation,
            [
              locationModel,
              filePath,
            ],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> addLocationAndSecret(
    _i2.LocationModel? locationModel,
    String? secretHash,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLocationAndSecret,
          [
            locationModel,
            secretHash,
            filePath,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocationAndSecret,
            [
              locationModel,
              secretHash,
              filePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocationAndSecret,
            [
              locationModel,
              secretHash,
              filePath,
            ],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> addSecret(
    String? secretHash,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSecret,
          [
            secretHash,
            filePath,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addSecret,
            [
              secretHash,
              filePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addSecret,
            [
              secretHash,
              filePath,
            ],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<_i3.MetaDataModel> retriveMetaData(String? filePath) =>
      (super.noSuchMethod(
        Invocation.method(
          #retriveMetaData,
          [filePath],
        ),
        returnValue: _i9.Future<_i3.MetaDataModel>.value(_FakeMetaDataModel_1(
          this,
          Invocation.method(
            #retriveMetaData,
            [filePath],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.MetaDataModel>.value(_FakeMetaDataModel_1(
          this,
          Invocation.method(
            #retriveMetaData,
            [filePath],
          ),
        )),
      ) as _i9.Future<_i3.MetaDataModel>);
}

/// A class which mocks [AudioMetaDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioMetaDataService extends _i1.Mock
    implements _i17.AudioMetaDataService {
  @override
  _i9.Future<String> addLocation(
    _i2.LocationModel? locationModel,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLocation,
          [
            locationModel,
            filePath,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocation,
            [
              locationModel,
              filePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocation,
            [
              locationModel,
              filePath,
            ],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> addLocationAndSecret(
    _i2.LocationModel? locationModel,
    String? secretHash,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLocationAndSecret,
          [
            locationModel,
            secretHash,
            filePath,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocationAndSecret,
            [
              locationModel,
              secretHash,
              filePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocationAndSecret,
            [
              locationModel,
              secretHash,
              filePath,
            ],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> addSecret(
    String? secretHash,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSecret,
          [
            secretHash,
            filePath,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addSecret,
            [
              secretHash,
              filePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addSecret,
            [
              secretHash,
              filePath,
            ],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<_i3.MetaDataModel> retriveMetaData(String? filePath) =>
      (super.noSuchMethod(
        Invocation.method(
          #retriveMetaData,
          [filePath],
        ),
        returnValue: _i9.Future<_i3.MetaDataModel>.value(_FakeMetaDataModel_1(
          this,
          Invocation.method(
            #retriveMetaData,
            [filePath],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.MetaDataModel>.value(_FakeMetaDataModel_1(
          this,
          Invocation.method(
            #retriveMetaData,
            [filePath],
          ),
        )),
      ) as _i9.Future<_i3.MetaDataModel>);
}

/// A class which mocks [VideoMetaDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoMetaDataService extends _i1.Mock
    implements _i18.VideoMetaDataService {
  @override
  _i9.Future<String> addLocation(
    _i2.LocationModel? locationModel,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLocation,
          [
            locationModel,
            filePath,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocation,
            [
              locationModel,
              filePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocation,
            [
              locationModel,
              filePath,
            ],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> addLocationAndSecret(
    _i2.LocationModel? locationModel,
    String? secretHash,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLocationAndSecret,
          [
            locationModel,
            secretHash,
            filePath,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocationAndSecret,
            [
              locationModel,
              secretHash,
              filePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addLocationAndSecret,
            [
              locationModel,
              secretHash,
              filePath,
            ],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> addSecret(
    String? secretHash,
    String? filePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSecret,
          [
            secretHash,
            filePath,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addSecret,
            [
              secretHash,
              filePath,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addSecret,
            [
              secretHash,
              filePath,
            ],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<_i3.MetaDataModel> retriveMetaData(String? filePath) =>
      (super.noSuchMethod(
        Invocation.method(
          #retriveMetaData,
          [filePath],
        ),
        returnValue: _i9.Future<_i3.MetaDataModel>.value(_FakeMetaDataModel_1(
          this,
          Invocation.method(
            #retriveMetaData,
            [filePath],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i3.MetaDataModel>.value(_FakeMetaDataModel_1(
          this,
          Invocation.method(
            #retriveMetaData,
            [filePath],
          ),
        )),
      ) as _i9.Future<_i3.MetaDataModel>);
}

/// A class which mocks [VideoSavingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoSavingService extends _i1.Mock
    implements _i19.VideoSavingService {
  @override
  _i9.Future<String> saveFile() => (super.noSuchMethod(
        Invocation.method(
          #saveFile,
          [],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #saveFile,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #saveFile,
            [],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [ImageSavingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageSavingService extends _i1.Mock
    implements _i20.ImageSavingService {
  @override
  _i4.IMediaPickerService get imagePickerWrapper => (super.noSuchMethod(
        Invocation.getter(#imagePickerWrapper),
        returnValue: _FakeIMediaPickerService_2(
          this,
          Invocation.getter(#imagePickerWrapper),
        ),
        returnValueForMissingStub: _FakeIMediaPickerService_2(
          this,
          Invocation.getter(#imagePickerWrapper),
        ),
      ) as _i4.IMediaPickerService);

  @override
  _i9.Future<String> saveFile() => (super.noSuchMethod(
        Invocation.method(
          #saveFile,
          [],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #saveFile,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #saveFile,
            [],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [ImageWaterMarkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageWaterMarkService extends _i1.Mock
    implements _i21.ImageWaterMarkService {
  @override
  _i9.Future<String> addWaterMark(String? filePath) => (super.noSuchMethod(
        Invocation.method(
          #addWaterMark,
          [filePath],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addWaterMark,
            [filePath],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addWaterMark,
            [filePath],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [VideoWaterMarkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoWaterMarkService extends _i1.Mock
    implements _i22.VideoWaterMarkService {
  @override
  _i9.Future<String> addWaterMark(String? filePath) => (super.noSuchMethod(
        Invocation.method(
          #addWaterMark,
          [filePath],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addWaterMark,
            [filePath],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #addWaterMark,
            [filePath],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [AudioHashingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioHashingService extends _i1.Mock
    implements _i23.AudioHashingService {
  @override
  _i9.Future<String> hash(
    String? path, [
    dynamic Function(double)? progress,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #hash,
          [
            path,
            progress,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hash,
            [
              path,
              progress,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hash,
            [
              path,
              progress,
            ],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [ImageHashingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageHashingService extends _i1.Mock
    implements _i24.ImageHashingService {
  @override
  _i9.Future<String> hash(
    String? path, [
    dynamic Function(double)? progress,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #hash,
          [
            path,
            progress,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hash,
            [
              path,
              progress,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hash,
            [
              path,
              progress,
            ],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [VideoHashingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVideoHashingService extends _i1.Mock
    implements _i25.VideoHashingService {
  @override
  _i9.Future<String> hash(
    String? path, [
    dynamic Function(double)? progress,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #hash,
          [
            path,
            progress,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hash,
            [
              path,
              progress,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hash,
            [
              path,
              progress,
            ],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [VerificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerificationService extends _i1.Mock
    implements _i26.VerificationService {
  @override
  String get url => (super.noSuchMethod(
        Invocation.getter(#url),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#url),
        ),
      ) as String);

  @override
  _i9.Future<_i5.VerificationStatusModel> verify(String? hash) =>
      (super.noSuchMethod(
        Invocation.method(
          #verify,
          [hash],
        ),
        returnValue: _i9.Future<_i5.VerificationStatusModel>.value(
            _FakeVerificationStatusModel_3(
          this,
          Invocation.method(
            #verify,
            [hash],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i5.VerificationStatusModel>.value(
                _FakeVerificationStatusModel_3(
          this,
          Invocation.method(
            #verify,
            [hash],
          ),
        )),
      ) as _i9.Future<_i5.VerificationStatusModel>);

  @override
  _i9.Future<bool> verifySignature(
    String? hash,
    String? signature,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifySignature,
          [
            hash,
            signature,
          ],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [FilePickerWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilePickerWrapper extends _i1.Mock implements _i27.FilePickerWrapper {
  @override
  _i9.Future<_i28.FileDataModel?> selectFileAsStream() => (super.noSuchMethod(
        Invocation.method(
          #selectFileAsStream,
          [],
        ),
        returnValue: _i9.Future<_i28.FileDataModel?>.value(),
        returnValueForMissingStub: _i9.Future<_i28.FileDataModel?>.value(),
      ) as _i9.Future<_i28.FileDataModel?>);
}

/// A class which mocks [HashLogic].
///
/// See the documentation for Mockito's code generation for more information.
class MockHashLogic extends _i1.Mock implements _i29.HashLogic {
  @override
  _i9.Future<String> hashBytes(_i30.Uint8List? bytes) => (super.noSuchMethod(
        Invocation.method(
          #hashBytes,
          [bytes],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hashBytes,
            [bytes],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hashBytes,
            [bytes],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> hashBytesInChunks(_i30.Uint8List? bytes) =>
      (super.noSuchMethod(
        Invocation.method(
          #hashBytesInChunks,
          [bytes],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hashBytesInChunks,
            [bytes],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hashBytesInChunks,
            [bytes],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<String> hashBytesInChunksFromStream(
    _i9.Stream<List<int>>? byteStream, [
    dynamic Function(int)? progress,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #hashBytesInChunksFromStream,
          [
            byteStream,
            progress,
          ],
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hashBytesInChunksFromStream,
            [
              byteStream,
              progress,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #hashBytesInChunksFromStream,
            [
              byteStream,
              progress,
            ],
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [ImagePickerWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePickerWrapper extends _i1.Mock
    implements _i31.ImagePickerWrapper {
  @override
  _i9.Future<_i30.Uint8List> getImageAsBytes() => (super.noSuchMethod(
        Invocation.method(
          #getImageAsBytes,
          [],
        ),
        returnValue: _i9.Future<_i30.Uint8List>.value(_i30.Uint8List(0)),
        returnValueForMissingStub:
            _i9.Future<_i30.Uint8List>.value(_i30.Uint8List(0)),
      ) as _i9.Future<_i30.Uint8List>);

  @override
  _i9.Future<_i30.Uint8List> getVideoAsBytes() => (super.noSuchMethod(
        Invocation.method(
          #getVideoAsBytes,
          [],
        ),
        returnValue: _i9.Future<_i30.Uint8List>.value(_i30.Uint8List(0)),
        returnValueForMissingStub:
            _i9.Future<_i30.Uint8List>.value(_i30.Uint8List(0)),
      ) as _i9.Future<_i30.Uint8List>);
}

/// A class which mocks [ShowInExplorer].
///
/// See the documentation for Mockito's code generation for more information.
class MockShowInExplorer extends _i1.Mock implements _i32.ShowInExplorer {
  @override
  _i9.Future<String> show({
    required String? transaction,
    _i32.Network? network = _i32.Network.bitcoin,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [],
          {
            #transaction: transaction,
            #network: network,
          },
        ),
        returnValue: _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #show,
            [],
            {
              #transaction: transaction,
              #network: network,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #show,
            [],
            {
              #transaction: transaction,
              #network: network,
            },
          ),
        )),
      ) as _i9.Future<String>);
}

/// A class which mocks [SignatureVerificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignatureVerificationService extends _i1.Mock
    implements _i33.SignatureVerificationService {
  @override
  _i6.ECPublicKey get pubKey => (super.noSuchMethod(
        Invocation.getter(#pubKey),
        returnValue: _FakeECPublicKey_4(
          this,
          Invocation.getter(#pubKey),
        ),
        returnValueForMissingStub: _FakeECPublicKey_4(
          this,
          Invocation.getter(#pubKey),
        ),
      ) as _i6.ECPublicKey);

  @override
  set pubKey(_i6.ECPublicKey? _pubKey) => super.noSuchMethod(
        Invocation.setter(
          #pubKey,
          _pubKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get pemPubKey => (super.noSuchMethod(
        Invocation.getter(#pemPubKey),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#pemPubKey),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#pemPubKey),
        ),
      ) as String);

  @override
  _i6.ECSignature loadAndConvertSignature(String? sig) => (super.noSuchMethod(
        Invocation.method(
          #loadAndConvertSignature,
          [sig],
        ),
        returnValue: _FakeECSignature_5(
          this,
          Invocation.method(
            #loadAndConvertSignature,
            [sig],
          ),
        ),
        returnValueForMissingStub: _FakeECSignature_5(
          this,
          Invocation.method(
            #loadAndConvertSignature,
            [sig],
          ),
        ),
      ) as _i6.ECSignature);

  @override
  _i6.ECPublicKey loadAndPrepPubKey() => (super.noSuchMethod(
        Invocation.method(
          #loadAndPrepPubKey,
          [],
        ),
        returnValue: _FakeECPublicKey_4(
          this,
          Invocation.method(
            #loadAndPrepPubKey,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeECPublicKey_4(
          this,
          Invocation.method(
            #loadAndPrepPubKey,
            [],
          ),
        ),
      ) as _i6.ECPublicKey);

  @override
  bool verify(
    String? hash,
    String? sig,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verify,
          [
            hash,
            sig,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [ForegroundServiceWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockForegroundServiceWrapper extends _i1.Mock
    implements _i34.ForegroundServiceWrapper {
  @override
  _i9.Future<bool> get isRunning => (super.noSuchMethod(
        Invocation.getter(#isRunning),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<void> start(
    Function? startCallback,
    String? title,
    String? description,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #start,
          [
            startCallback,
            title,
            description,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> setData(
    String? key,
    Object? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setData,
          [
            key,
            value,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<T?> getData<T>(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getData,
          [key],
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  _i9.Future<void> updateNotification({
    String? title,
    String? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotification,
          [],
          {
            #title: title,
            #body: body,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.ReceivePort> getReceivePort() => (super.noSuchMethod(
        Invocation.method(
          #getReceivePort,
          [],
        ),
        returnValue: _i9.Future<_i7.ReceivePort>.value(_FakeReceivePort_6(
          this,
          Invocation.method(
            #getReceivePort,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i7.ReceivePort>.value(_FakeReceivePort_6(
          this,
          Invocation.method(
            #getReceivePort,
            [],
          ),
        )),
      ) as _i9.Future<_i7.ReceivePort>);
}
